namespace = suelg_deep_scan

#From = Planet/starbase scope
#This = Ship scope
#on_fleet_enter_orbit
fleet_event = {
    id = suelg_deep_scan.1
    hide_window = yes
    is_triggered_only = yes
	trigger = {
		# log = ">> CHECK ORBIT FROM: [from.GetName] THIS: [This.GetName] ROOT: [root.GetName]"

		From = { # planet/starbase
			is_scope_type = planet

			is_star = yes
			solar_system = {
				has_owner = yes
			}
		}
		This = { # ship
			OR = {
				is_scope_type = ship
				is_scope_type = fleet
			}
			
			is_in_combat = no

			exists = leader
			leader = {
				leader_class = scientist
			}
			exists = owner
			owner = {
				is_ai = no
				is_same_value = from.solar_system.owner
			}
		}
	}

    immediate = {
		# log = ">> RUN EVENT - FROM: [from.GetName] THIS: [This.GetName]"

		from = {
			solar_system = {
				if = {
					limit = {
						exists = owner
						OR = {
							is_variable_set = no
							check_variable = { which = suelg_scanned_lvl value < 1 }
						}
					}

					set_variable = { which = suelg_scanned_lvl value = 1 }

					every_system_planet = {
						if = {
							limit = {								
								NOR = {
									is_planet_class = pc_ringworld_habitable
									is_planet_class = pc_ringworld_habitable_damaged
									is_planet_class = pc_ringworld_tech
									is_planet_class = pc_ringworld_tech_damaged
									is_planet_class = pc_ringworld_seam
									is_planet_class = pc_ringworld_seam_damaged
									is_planet_class = pc_habitat
								}
							}
							enable_special_project = {
								name = "suelg_deep_scan_1_special_project"
								location = this
								owner = root
							}
						}
					}
				}
			}
		}
    }
}

#this = Ship scope
#fromfrom = Planet scope
#from = Ship scope
#suelg_deep_scan_{X}_special_project
ship_event = {
    id = suelg_deep_scan.2
    hide_window = yes
    is_triggered_only = yes

    immediate = {
		# log = ">> PROJECT COMPLETE. FROM: [from.GetName] THIS: [This.GetName] ROOT: [root.GetName] FROMFROM: [fromfrom.GetName]"

		save_event_target_as = t_ship

		leader = {
			save_event_target_as = t_leader
			owner = {
				save_event_target_as = t_owner
			}

		}
		fromfrom = {
			save_event_target_as = t_planet

			planet_event = { id = suelg_deep_scan.5 } # Calculate the chance for an orbital deposit to spawn 
			planet_event = { id = suelg_deep_scan.3 } # Calculate the chance for an Archaeological site to spawn 
			planet_event = { id = suelg_deep_scan.4 } # Calculate the chance for an anomaly to spawn 
		}
    }
}

# Calculate the chance for an Archaeological site to spawn 
planet_event = {
    id = suelg_deep_scan.3
    hide_window = yes
    is_triggered_only = yes

    immediate = {
		set_variable = { which = suelg_digsite_chance value = @suelg_spawn_archaeological_site_chance }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_archaeologist V = 0.1 }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_archaeologist_2 V = 0.2 }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_collective_wisdom V = 0.05 }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_collective_wisdom_2 V = 0.1 }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_collective_wisdom_3 V = 0.15 }
		inline_script = { script = suelg_add_ch_trait N = suelg_digsite_chance T = leader_trait_frontier_adventurer V = 0.1 }

		set_variable_to_random_value = { which = suelg_dice min = 0 max = 100 rounded = no }

		# log = ">> ROLL Archaeological site. DICE: [This.suelg_dice] CHANCE: [This.suelg_digsite_chance]"
		if = {
			limit = {
				check_variable = { which = suelg_dice value <= suelg_digsite_chance }
			}
			create_archaeological_site = random
		}
		
		clear_variable = suelg_dice
		clear_variable = suelg_digsite_chance
    }
}

# Calculate the chance for an anomaly to spawn 
planet_event = {
    id = suelg_deep_scan.4
    hide_window = yes
    is_triggered_only = yes

    immediate = {
		# log = ">> CHECK ANOMALY. FROM: [from.GetName] THIS: [This.GetName] ROOT: [root.GetName] FROMFROM: [fromfrom.GetName]"
		set_variable = { which = suelg_anomaly_chance value = @suelg_spawn_anomaly_basic_chance }

		# Calculate additional modificator from leader
		if = {
			limit = { 
				event_target:t_leader = {
					is_variable_set = suelg_l_anomaly_add_chance
				}
			}
			change_variable = { which = suelg_anomaly_chance value = event_target:t_leader.suelg_l_anomaly_add_chance }
		} else = {
			event_target:t_leader = {
				set_variable = { which = suelg_l_anomaly_add_chance value = 0 }
			}
		}

		# Calculate additional modificators from owner
		if = {
			limit = {
				event_target:t_owner = {
					has_edict = map_the_stars
				}
			}
			inline_script = { script = suelg_add_anomaly_chance_mod VAL = @suelg_map_the_start_edict_mod }
		}

		set_variable_to_random_value = { which = suelg_dice min = 0 max = 100 rounded = no }
		# log = ">> ROLL ANOMALY DICE: [This.suelg_dice] CHANCE: [This.suelg_anomaly_chance]"
		if = {
			limit = {
				check_variable = { which = suelg_dice value <= suelg_anomaly_chance }
				has_anomaly = no
			}
			# log = ">> SPAWN ANOMALY!"
			
			# debug example:
			set_planet_flag = planet_has_new_anomaly
			add_anomaly = { category = DIMENSIONAL_POCKET_CAT }

			if = {
				limit = { has_anomaly = yes } 

				planet_event = { id = suelg_deep_scan.6 } # Add anomaly Notification
				event_target:t_leader = {
					set_variable = { which = suelg_l_anomaly_add_chance value = 0 }
				}
			}
		} else = {
			event_target:t_leader = {
				change_variable = { which = suelg_l_anomaly_add_chance value = @suelg_leaders_spawn_anomaly_add_chance }
			}
		}
		
		clear_variable = suelg_dice
		clear_variable = suelg_anomaly_chance
    }
}

# Calculate the chance for an orbital deposit to spawn 
planet_event = {
    id = suelg_deep_scan.5
    hide_window = yes
    is_triggered_only = yes

	trigger = {
		suelg_can_have_orbital_deposits = yes
	}

    immediate = {
		log = ">> CHECK DEPOSIT. FROM: [from.GetName] THIS: [This.GetName] ROOT: [root.GetName] FROMFROM: [fromfrom.GetName]"

		set_variable = { which = suelg_sum_weight value = 0 }

		# calculate basic weights and sum of succeful resource weight
		inline_script = { script = suelg_set_base_res_weights RES = "mineral" }
		inline_script = { script = suelg_set_base_res_weights RES = "energy" }
		inline_script = { script = suelg_set_base_res_weights RES = "trade" }
		inline_script = { script = suelg_set_base_res_weights RES = "alloy" }

		inline_script = { script = suelg_set_base_res_weights RES = "physics" }
		inline_script = { script = suelg_set_base_res_weights RES = "society" }
		inline_script = { script = suelg_set_base_res_weights RES = "engineering" }

		inline_script = { script = suelg_set_base_res_weights RES = "volatile_motes" }
		inline_script = { script = suelg_set_base_res_weights RES = "rare_crystals" }
		inline_script = { script = suelg_set_base_res_weights RES = "exotic_gases" }

		if = {
			limit = { can_have_minor_engineering_deposits = yes }
			if = {
				limit = { check_variable = { which = suelg_engineering_weight value = 0 } }
				change_variable = { which = suelg_sum_weight value = @suelg_spawn_engineering_weight }
			}
			set_variable = { which = suelg_engineering_weight value = @suelg_spawn_engineering_weight }
		}
		if = {
			limit = { can_have_minor_physics_deposits = yes }
			if = {
				limit = { check_variable = { which = suelg_physics_weight value = 0 } }
				change_variable = { which = suelg_sum_weight value = @suelg_spawn_engineering_weight }
			}
			set_variable = { which = suelg_physics_weight value = @suelg_spawn_physics_weight }
		}

		set_variable = { which = suelg_sub_with_null_weight value = suelg_sum_weight }
		divide_variable = { which = suelg_sub_with_null_weight value = @suelg_spawn_resource_chance }
		multiply_variable = { which = suelg_sub_with_null_weight value = 100 }

		set_variable_to_random_value = { which = suelg_res_dice min = 0 max = suelg_sub_with_null_weight rounded = no }
		log = ">> ROLL RES DICE: [This.suelg_res_dice] SUCCESS: [This.suelg_sum_weight]  ALL: [This.suelg_sub_with_null_weight]"
		if = {
			limit = {
				check_variable = { which = suelg_res_dice value <= suelg_sum_weight }
			}
			planet_event = { id = suelg_deep_scan.7 } # Spawn resource deposit
		}
    }
}

# Add anomaly Notification
planet_event = {
    id = suelg_deep_scan.6
    hide_window = yes
    is_triggered_only = yes

	immediate = {
		event_target:t_ship = { # can't create message for in planet scope without owner
			create_message = {
				type = SUELG_ANOMALY_DETECTED
				localization = SUELG_ANOMALY_DETECTED_MESSAGE
				days = 15
				target = event_target:t_planet
				variable = {
					type = name
					localization = SHIP
					scope = this
				}
				variable = {
					type = name
					localization = PLANET
					scope = event_target:t_planet
				}
			}
		}
	}
}

# Spawn resource deposit
planet_event = {
    id = suelg_deep_scan.7
    hide_window = yes
    is_triggered_only = yes

	immediate = {
		log = ">> TRYING SPAWN RES. DICE: [This.suelg_res_dice]"
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "mineral" DEP = "d_minerals_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "energy" DEP = "d_engineering_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "trade" DEP = "d_trade_value_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "alloy" DEP = "d_alloys_1" }

		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "physics" DEP = "d_physics_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "society" DEP = "d_society_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "engineering" DEP = "d_engineering_1" }

		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "volatile_motes" DEP = "d_volatile_motes_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "rare_crystals" DEP = "d_rare_crystals_1" }
		inline_script = { script = suelg_check_n_add_res_o_deposit RES = "exotic_gases" DEP = "d_exotic_gases_1" }

		clear_variable = suelg_mineral_weight
		clear_variable = suelg_energy_weight
		clear_variable = suelg_trade_weight
		clear_variable = suelg_alloy_weight

		clear_variable = suelg_physics_weight
		clear_variable = suelg_society_weight
		clear_variable = suelg_engineering_weight

		clear_variable = suelg_volatile_motes_weight
		clear_variable = suelg_rare_crystals_weight
		clear_variable = suelg_exotic_gases_weight

		clear_variable = suelg_res_dice
		remove_planet_flag = new_deposit_added
	}
}