namespace = suelg_spawn_anomaly

# Calculate the chance for an anomaly to spawn 
planet_event = {
    id = suelg_spawn_anomaly.1
    hide_window = yes
    is_triggered_only = yes

    immediate = {
		# log = ">> CHECK ANOMALY. FROM: [from.GetName] THIS: [This.GetName] ROOT: [root.GetName] FROMFROM: [fromfrom.GetName]"
		# init additional leader chance
		event_target:t_leader = {
			if = {
				limit = { 
					NOT = { is_variable_set = suelg_l_anomaly_add_chance }
				}
				set_variable = { which = suelg_l_anomaly_add_chance value = 0 }
			}
		}

		random_list = {
			1 = { # 5 (5%) is vanilla chance
				modifier = {
					add = event_target:t_leader.suelg_l_anomaly_add_chance
				}
				modifier = {
					factor = 0
					OR = {
						has_anomaly = yes
						is_preventing_anomaly = yes
					}
				}
				modifier = {
					factor = 1.1
					event_target:t_owner = {
						has_edict = map_the_stars
					}
				}
				inline_script = { script = suelg_add_mfactor_btrait T = subclass_scientist_explorer F = 1.1 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_meticulous F = 1.1 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_meticulous_2 F = 1.15 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_prospector_3 F = 1.25 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_observant_3 F = 1.25 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_insightful_3 F = 1.25 }
				inline_script = { script = suelg_add_mfactor_btrait T = leader_trait_scholarium_observer F = 1.05 }

				planet_event = { id = suelg_spawn_anomaly.2 scopes = { from = event_target:t_ship } } # Spawn planet anomaly
			}
			100 = {
				event_target:t_leader = {
					change_variable = { which = suelg_l_anomaly_add_chance value = 0.1 }
				}
			}
		}
    }
}

# Spawn planet anomaly
# From = ship scope
planet_event = {
    id = suelg_spawn_anomaly.2
    hide_window = yes
    is_triggered_only = yes

	immediate = {
		# log = ">> BEFORE SPAWN ANOMALY! THIS: [This.GetName] FROM: [From.GetName]"
		suelg_spawn_random_anomaly = yes

		if = {
			limit = {
				has_anomaly = yes
				has_planet_flag = suelg_planet_has_new_anomaly
			} 
			from = {
				add_anomaly_notification = yes
				leader = {
					set_variable = { which = suelg_l_anomaly_add_chance value = 0 }
				}
			}
			remove_planet_flag = suelg_planet_has_new_anomaly
		}
	}
}