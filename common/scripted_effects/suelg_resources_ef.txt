# this = planet scope
suelg_get_habitat_and_orbital = {
	save_event_target_as = t_planet

	solar_system = {
		random_system_planet = {
			limit = {
				has_planet_flag = habitat
			}
			save_event_target_as = t_habitat
		}
	}

	if = {
		limit = {
			any_fleet_in_orbit = {
				OR = {
					is_ship_size = major_orbital_resource
					is_ship_size = minor_orbital_resource
				}
			}
		}
		random_fleet_in_orbit = {
			limit = {
				OR = {
					is_ship_size = major_orbital_resource
					is_ship_size = minor_orbital_resource
				}
			}
			save_event_target_as = t_orbital
		}
	} else = {
		solar_system = {
			random_system_planet = {
				limit = {
					is_planet_class = pc_habitat
					orbit = {
						is_same_value = event_target:t_planet
					}
				}
				save_event_target_as = t_orbital_habitat
			}
		}
	}
}

suelg_add_habitat_deposit_and_flag = {
	suelg_get_habitat_and_orbital = yes

	if = {
		limit = {
			OR = {
				exists = event_target:t_orbital
				exists = event_target:t_orbital_habitat
			}
			exists = event_target:t_habitat
		}

		event_target:t_habitat = {
			suelg_add_deposit_$MAX_DEP_LVL$ = { D = $HAB_DEP_TYPE$ }
		}

		[[FLAG_TYPE]
			if = {
				limit = {
					exists = event_target:t_orbital
				}
				event_target:t_orbital = {
					set_fleet_flag = $FLAG_TYPE$_orbital
				}
			} else_if = {
				limit = {
					exists = event_target:t_orbital_habitat
				}
				event_target:t_orbital_habitat = {
					set_planet_flag = $FLAG_TYPE$_habitat
				}
			}
		]
	}
}

# todo: deprecated?
# suelg_add_habitat_deposit = {
# 	suelg_find_habitat = yes

# 	if = {
# 		limit = { 
# 			exists = event_target:t_orbital
# 			exists = event_target:t_habitat
# 		}

# 		last_added_deposit = {
# 			suelg_add_districts_flag = yes
# 		}
# 	}
# }


# this = planet
suelg_get_habitat_in_orbit = {
	save_event_target_as = t_planet

	solar_system = {
		random_system_planet = {
			limit = {
				is_planet_class = pc_habitat
				orbit = {
					is_same_value = event_target:t_planet
				}
			}
			save_event_target_as = t_habitat
		}
	}
}

# this = planet
# This deposit is needed to keep track of the point at which events, after learning of the anomaly,
# 	remove all deposits from the planet and add their deposits.
# 	It will be needed to recover lost deposits
suelg_add_tracking_empty_deposit = {
	if = {
		limit = {
			has_deposit_for = shipclass_mining_station
			NOT = { has_deposit = d_suelg_mining_empty_deposit }
		}
		set_planet_flag = suelg_has_deposits
		add_deposit = d_suelg_mining_empty_deposit
	} else_if = {
		limit = {
			has_deposit_for = shipclass_research_station
			NOT = { has_deposit = d_suelg_science_empty_deposit }
		}
		set_planet_flag = suelg_has_deposits
		add_deposit = d_suelg_science_empty_deposit
	} else_if = {
		limit = {
			suelg_has_trade_deposits = yes
			NOT = { has_deposit = d_suelg_trade_empty_deposit }
		}
		set_planet_flag = suelg_has_deposits
		add_deposit = d_suelg_trade_empty_deposit
	}
}

# Calculate which deposits have been added to the planet, so that unexpectedly deleted deposits can be restored later on
# this = planet
suelg_add_deposit_count_var = {
	if = {
		limit = { NOT = { is_variable_set = suelg_count_$D$ } }
		set_variable = { which = suelg_count_$D$ value = 0 }
	}
	change_variable = { which = suelg_count_$D$ value = 1 }
}

suelg_add_deposit_ws = { suelg_add_deposit_$MAX_SIZE$ = { D = $D$ } }

# this = planet
suelg_add_deposit = {
	suelg_add_deposit_count_var = { D = $D$ }
	suelg_add_deposit_ws = { D = $D$ MAX_SIZE = @suelg_sizes_$D$ }

	suelg_add_tracking_empty_deposit = yes
}

# this = planet
suelg_add_deposit_10 = {
	if = { limit = { always = no } }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 1 NEXT_LVL = 2 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 2 NEXT_LVL = 3 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 3 NEXT_LVL = 4 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 4 NEXT_LVL = 5 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 5 NEXT_LVL = 6 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 6 NEXT_LVL = 7 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 7 NEXT_LVL = 8 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 8 NEXT_LVL = 9 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 9 NEXT_LVL = 10 }
	else = { add_deposit = $D$_1 }
}

# this = planet
suelg_add_deposit_5 = {
	if = { limit = { always = no } }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 1 NEXT_LVL = 2 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 2 NEXT_LVL = 3 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 3 NEXT_LVL = 4 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 4 NEXT_LVL = 5 }
	else = { add_deposit = $D$_1 }
}

# this = planet
suelg_add_deposit_3 = {
	if = { limit = { always = no } }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 1 NEXT_LVL = 2 }
	inline_script = { script = spawn_deposits/suelg_add_deposit D = $D$ LVL = 2 NEXT_LVL = 3 }
	else = { add_deposit = $D$_1 }
}

# todo: deprecated?
# this = planet scope
suelg_set_habitat_type = {
	suelg_get_habitat_in_orbit = yes
	if = {
		limit = {
			exists = event_target:t_habitat
			NOT = { has_planet_flag = $TYPE$ }
		}

		solar_system = {
			owner = {
				if = {
					limit = { is_ai = no }
					create_message = {
						type = SUELG_NEW_HABITAT_DISTRICT
						localization = SUELG_NEW_HABITAT_DISTRICT_$TYPE$
						days = @suelg_notification_days
						target = event_target:t_habitat
						variable = {
							type = name
							localization = HABITAT
							scope = event_target:t_habitat
						}
					}
				}
			}
		}

		event_target:t_habitat = {
			set_planet_flag = $TYPE$
		}
	}
}

# this = planet scope
suelg_new_habitat_dep_message = {
	solar_system = {
		owner = {
			if = {
				limit = { is_ai = no }
				create_message = {
					type = SUELG_NEW_HABITAT_DISTRICT
					localization = SUELG_NEW_HABITAT_DISTRICT_$TYPE$
					days = @suelg_notification_days
					target = event_target:t_habitat
					variable = {
						type = name
						localization = HABITAT
						scope = event_target:t_habitat
					}
				}
			}
		}
	}
}

suelg_new_rare_dep_message = {
	if = {
		limit = {
			exists = FROM
			FROM = {
				is_scope_type = planet
			}
		}
		solar_system = {
			owner = {
				if = {
					limit = { is_ai = no }
					create_message = {
						type = SUELG_NEW_RARE_DEPOSIT
						localization = SUELG_NEW_RARE_DEPOSIT_$TYPE$
						days = @suelg_notification_days
						target = FROM
						variable = {
							type = name
							localization = PLANET
							scope = FROM
						}
					}
				}
			}
		}
	}
}

suelg_new_science_dep_message = {
	solar_system = {
		owner = {
			if = {
				limit = { is_ai = no }
				create_message = {
					type = SUELG_NEW_SCIENCE_DEPOSIT
					localization = SUELG_NEW_SCIENCE_DEPOSIT_$TYPE$
					days = @suelg_notification_days
					target = FROM
					variable = {
						type = name
						localization = PLANET
						scope = FROM
					}
				}
			}
		}
	}
}

suelg_new_basic_dep_message = {
	if = {
		limit = {
			exists = FROM
			FROM = {
				is_scope_type = planet
			}
		}
		solar_system = {
			owner = {
				if = {
					limit = { is_ai = no }
					create_message = {
						type = SUELG_NEW_BASIC_DEPOSIT
						localization = SUELG_NEW_BASIC_DEPOSIT_$TYPE$
						days = @suelg_notification_days
						target = FROM
						variable = {
							type = name
							localization = PLANET
							scope = FROM
						}
					}
				}
			}
		}
	}
}

# scope = planet
suelg_calculate_archeology_factor = {
	set_variable = { which = suelg_archeology_ch_mod value = 1 }
	# The vanilla modifier `ship_archaeological_site_excavation_speed_mult` was used to modify the chance of finding archaeological sites
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = subclass_scientist_explorer M = 0.1 } # not vanilla modifier
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_archaeologist M = 0.1 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_archaeologist_2 M = 0.2 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_percussive_maintainer M = 0.1 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_ancient_knowledge M = 0.1 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_frontier_adventurer M = 0.1 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_inspired_archaeologist M = 0.15 } # 0.3 is too much
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_scientist_mind_wipe_02 M = 0.2 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = gestalt_trait_scientist_mind_wipe_02 M = 0.2 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_legendary_far_from_home M = 0.25 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = subclass_scientist_scholar M = 0.1 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_legendary_ancestors_knowledge M = 0.3 } # 0.75 is too much
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_collective_wisdom M = -0.15 }
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_traumatized M = -0.1 } # -0.30 is pain for players
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_traumatized_2 M = -0.25 } # -1.00 is pain for players
	inline_script = { script = suelg_add_by_tLeader V = suelg_archeology_ch_mod T = has_trait N = leader_trait_black_light_blinded M = -0.25 } # -0.5 is pain for players

	event_target:t_owner = {
		random_owned_leader = {
			limit = {
				is_councilor = yes
				is_councilor_type = councilor_eager_explorers
			}
			event_target:t_planet = {
				change_variable = { which = suelg_archeology_ch_mod value = 0.05 }
			}
		}
	}
}